networks:
  local:
services:
  db:
    image: postgres:17
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo
    volumes:
      - db:/var/lib/postgresql/data
      - ./database:/database
    networks:
      - local
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
  odoo:
    build: odoo
    environment:
      PYTHONDONTWRITEBYTECODE: "True"
      DB_NAME: db
      DB_HOST: db
      DB_PASSWORD: odoo
      DB_USER: odoo
      LIST_DB: "True"
      DB_FILTER: db
      WITHOUT_DEMO: "False"
      WORKERS: 0
      MAX_CRON_THREADS: 0
      SERVER_WIDE_MODULES: web,queue_job
      ODOO_REPORT_URL: http://odoo:8069
      RUNNING_ENV: test
    depends_on:
      - db
      - kwkhtmltopdf
      - mailhog
      - elasticsearch
    networks:
      - local
    volumes:
      - ./data/addons:/data/odoo/addons
      - ./data/filestore:/data/odoo/filestore
      - ./data/sessions:/data/odoo/sessions
  kwkhtmltopdf:
    image: acsone/kwkhtmltopdf
    networks:
      - local

  # TODO add ngnix config for odoo + cors config sur tout (pour pas se prendre la tete)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      discovery.type: single-node
      http.cors.enabled: "true"
      http.cors.allow-origin: "*"
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - local
  nuxt:
    build: nuxt
    environment:
      NUXT_PUBLIC_PAYLOAD_URL: http://payload.localhost:9080
      NUXT_PUBLIC_SHOPINVADER_ELASTICSEARCH_URL: http://elasticsearch.localhost:9080
      NUXT_PUBLIC_SHOPINVADER_ELASTICSEARCH_INDICES_PRODUCTS: demo_product_variant
      NUXT_PUBLIC_SHOPINVADER_ELASTICSEARCH_INDICES_CATEGORIES: demo_product_category
      NUXT_PUBLIC_SHOPINVADER_ERP_URL: http://nuxt.localhost:9080/shopinvader-api/demo
    ports:
      - 3000:3000
    networks:
      - local
    depends_on:
      - payload
      - elasticsearch
  payload:
    build: payload
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: payload
      DATABASE_USERNAME: odoo
      DATABASE_PASSWORD: odoo
      PAYLOAD_SECRET: super-secret
      SMTP_HOST: mailhog
      SMTP_USER: admin
      SMTP_PASS: secret
      SMTP_FROM: demo@example.org
      UPLOAD_PATH: ./public/media
    networks:
      - local
    depends_on:
      - db
    ports:
      - 1337:1337
  nginx:
    image: nginx
    volumes:
      - ./nginx:/etc/nginx/conf.d/:ro
      # We serve the odoo image with nginx for demo purpose (in production use a CDN)
      - ./data/filestore/db/storage/images:/images
    ports:
      - 9080:9080
    networks:
      local:
        aliases:
          - elasticsearch.localhost
          - odoo.localhost
          - payload.localhost
    depends_on:
      - odoo
      - payload
      - nuxt
      - elasticsearch
volumes:
  esdata:
  db:
